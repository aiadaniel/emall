<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vigorous.common.mapper.ItemSkuMapper">
  <resultMap id="BaseResultMap" type="com.vigorous.common.model.ItemSku">
    <id column="uniquecode" jdbcType="BIGINT" property="uniquecode" />
    <result column="skuid" jdbcType="INTEGER" property="skuid" />
    <result column="itemid" jdbcType="INTEGER" property="itemid" />
    <result column="shopid" jdbcType="INTEGER" property="shopid" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="properties" jdbcType="VARCHAR" property="properties" />
    <result column="item_num" jdbcType="VARCHAR" property="itemNum" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="sold_num" jdbcType="INTEGER" property="soldNum" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uniquecode, skuid, itemid, shopid, status, image_url, properties, item_num, price, 
    quantity, sold_num, gmt_create, gmt_update
  </sql>
  <select id="selectByExample" parameterType="com.vigorous.common.model.ItemSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from item_sku
    where uniquecode = #{uniquecode,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from item_sku
    where uniquecode = #{uniquecode,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.vigorous.common.model.ItemSkuExample">
    delete from item_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vigorous.common.model.ItemSku">
    insert into item_sku (uniquecode, skuid, itemid, 
      shopid, status, image_url, 
      properties, item_num, price, 
      quantity, sold_num, gmt_create, 
      gmt_update)
    values (#{uniquecode,jdbcType=BIGINT}, #{skuid,jdbcType=INTEGER}, #{itemid,jdbcType=INTEGER}, 
      #{shopid,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{imageUrl,jdbcType=VARCHAR}, 
      #{properties,jdbcType=VARCHAR}, #{itemNum,jdbcType=VARCHAR}, #{price,jdbcType=BIGINT}, 
      #{quantity,jdbcType=INTEGER}, #{soldNum,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.vigorous.common.model.ItemSku">
    insert into item_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uniquecode != null">
        uniquecode,
      </if>
      <if test="skuid != null">
        skuid,
      </if>
      <if test="itemid != null">
        itemid,
      </if>
      <if test="shopid != null">
        shopid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="properties != null">
        properties,
      </if>
      <if test="itemNum != null">
        item_num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="soldNum != null">
        sold_num,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uniquecode != null">
        #{uniquecode,jdbcType=BIGINT},
      </if>
      <if test="skuid != null">
        #{skuid,jdbcType=INTEGER},
      </if>
      <if test="itemid != null">
        #{itemid,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="properties != null">
        #{properties,jdbcType=VARCHAR},
      </if>
      <if test="itemNum != null">
        #{itemNum,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="soldNum != null">
        #{soldNum,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vigorous.common.model.ItemSkuExample" resultType="java.lang.Long">
    select count(*) from item_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update item_sku
    <set>
      <if test="record.uniquecode != null">
        uniquecode = #{record.uniquecode,jdbcType=BIGINT},
      </if>
      <if test="record.skuid != null">
        skuid = #{record.skuid,jdbcType=INTEGER},
      </if>
      <if test="record.itemid != null">
        itemid = #{record.itemid,jdbcType=INTEGER},
      </if>
      <if test="record.shopid != null">
        shopid = #{record.shopid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.imageUrl != null">
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.properties != null">
        properties = #{record.properties,jdbcType=VARCHAR},
      </if>
      <if test="record.itemNum != null">
        item_num = #{record.itemNum,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.soldNum != null">
        sold_num = #{record.soldNum,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdate != null">
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update item_sku
    set uniquecode = #{record.uniquecode,jdbcType=BIGINT},
      skuid = #{record.skuid,jdbcType=INTEGER},
      itemid = #{record.itemid,jdbcType=INTEGER},
      shopid = #{record.shopid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      properties = #{record.properties,jdbcType=VARCHAR},
      item_num = #{record.itemNum,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=BIGINT},
      quantity = #{record.quantity,jdbcType=INTEGER},
      sold_num = #{record.soldNum,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vigorous.common.model.ItemSku">
    update item_sku
    <set>
      <if test="skuid != null">
        skuid = #{skuid,jdbcType=INTEGER},
      </if>
      <if test="itemid != null">
        itemid = #{itemid,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="properties != null">
        properties = #{properties,jdbcType=VARCHAR},
      </if>
      <if test="itemNum != null">
        item_num = #{itemNum,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="soldNum != null">
        sold_num = #{soldNum,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uniquecode = #{uniquecode,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vigorous.common.model.ItemSku">
    update item_sku
    set skuid = #{skuid,jdbcType=INTEGER},
      itemid = #{itemid,jdbcType=INTEGER},
      shopid = #{shopid,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      properties = #{properties,jdbcType=VARCHAR},
      item_num = #{itemNum,jdbcType=VARCHAR},
      price = #{price,jdbcType=BIGINT},
      quantity = #{quantity,jdbcType=INTEGER},
      sold_num = #{soldNum,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP}
    where uniquecode = #{uniquecode,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>